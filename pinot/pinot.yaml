---
# Source: pinot/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: pinot
  labels:
    helm.sh/chart: pinot-0.2.5
    app: pinot
    release: pinot
    app.kubernetes.io/version: "0.2.5"
    app.kubernetes.io/managed-by: Helm
    heritage: Helm
---
# Source: pinot/templates/broker/configmap.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

apiVersion: v1
kind: ConfigMap
metadata:
  name: pinot-broker-config
data:
  pinot-broker.conf: |-
    pinot.broker.client.queryPort=8099
    pinot.broker.routing.table.builder.class=random
    pinot.set.instance.id.to.hostname=true
---
# Source: pinot/templates/controller/configmap.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

apiVersion: v1
kind: ConfigMap
metadata:
  name: pinot-controller-config
data:
  pinot-controller.conf: |-
    controller.helix.cluster.name=pinot
    controller.port=9000
    controller.data.dir=/var/pinot/controller/data
    controller.zk.str=pinot-zookeeper:2181
    pinot.set.instance.id.to.hostname=true
    controller.task.scheduler.enabled=true
---
# Source: pinot/templates/minion/configmap.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

# # apiVersion: v1
# # kind: ConfigMap
# # metadata:
# #   name: pinot-minion-config
# # data:
# #   pinot-minion.conf: |-
# #     pinot.minion.port=9514
# #     dataDir=/var/pinot/minion/data
# #     pinot.set.instance.id.to.hostname=true
# # ---
# Source: pinot/templates/server/configmap.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

apiVersion: v1
kind: ConfigMap
metadata:
  name: pinot-server-config
data:
  pinot-server.conf: |-
    pinot.server.netty.port=8098
    pinot.server.adminapi.port=8097
    pinot.server.instance.dataDir=/var/pinot/server/data/index
    pinot.server.instance.segmentTarDir=/var/pinot/server/data/segment
    pinot.set.instance.id.to.hostname=true
    pinot.server.instance.realtime.alloc.offheap=true
    pinot.server.instance.currentDataTableVersion=2
---
# Source: pinot/charts/zookeeper/templates/svc-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: pinot-zookeeper-headless
  namespace: default
  labels:
    app.kubernetes.io/name: zookeeper
    helm.sh/chart: zookeeper-7.0.0
    app.kubernetes.io/instance: pinot
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: zookeeper
spec:
  type: ClusterIP
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
    
    - name: tcp-client
      port: 2181
      targetPort: client
    
    
    - name: follower
      port: 2888
      targetPort: follower
    - name: tcp-election
      port: 3888
      targetPort: election
  selector:
    app.kubernetes.io/name: zookeeper
    app.kubernetes.io/instance: pinot
    app.kubernetes.io/component: zookeeper
---
# Source: pinot/charts/zookeeper/templates/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: pinot-zookeeper
  namespace: default
  labels:
    app.kubernetes.io/name: zookeeper
    helm.sh/chart: zookeeper-7.0.0
    app.kubernetes.io/instance: pinot
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: zookeeper
spec:
  type: ClusterIP
  ports:
    
    - name: tcp-client
      port: 2181
      targetPort: client
      nodePort: null
    
    
    - name: follower
      port: 2888
      targetPort: follower
    - name: tcp-election
      port: 3888
      targetPort: election
  selector:
    app.kubernetes.io/name: zookeeper
    app.kubernetes.io/instance: pinot
    app.kubernetes.io/component: zookeeper
---
# Source: pinot/templates/broker/service-external.yaml
apiVersion: v1
kind: Service
metadata:
  name: pinot-broker-external
  annotations:
    {}
  labels:
    helm.sh/chart: pinot-0.2.5
    app: pinot
    release: pinot
    app.kubernetes.io/version: "0.2.5"
    app.kubernetes.io/managed-by: Helm
    heritage: Helm
    component: broker
spec:
  type: LoadBalancer
  ports:
    - name: external-broker
      port: 8099
  selector:
    app: pinot
    release: pinot
    component: broker
---
# Source: pinot/templates/broker/service-headless.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

apiVersion: v1
kind: Service
metadata:
  name: pinot-broker-headless
  labels:
    helm.sh/chart: pinot-0.2.5
    app: pinot
    release: pinot
    app.kubernetes.io/version: "0.2.5"
    app.kubernetes.io/managed-by: Helm
    heritage: Helm
    component: broker
spec:
  clusterIP: None
  ports:
    # [pod_name].[service_name].[namespace].svc.cluster.local
    - name: broker
      port: 8099
  selector:
    app: pinot
    release: pinot
    component: broker
---
# Source: pinot/templates/broker/service.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

apiVersion: v1
kind: Service
metadata:
  name: pinot-broker
  annotations:
    {}
  labels:
    helm.sh/chart: pinot-0.2.5
    app: pinot
    release: pinot
    app.kubernetes.io/version: "0.2.5"
    app.kubernetes.io/managed-by: Helm
    heritage: Helm
    component: broker
spec:
  type: ClusterIP
  ports:
    # [pod_name].[service_name].[namespace].svc.cluster.local
    - name: broker
      port: 8099
  selector:
    app: pinot
    release: pinot
    component: broker
---
# Source: pinot/templates/controller/service-external.yaml
apiVersion: v1
kind: Service
metadata:
  name: pinot-controller-external
  annotations:
    {}
  labels:
    helm.sh/chart: pinot-0.2.5
    app: pinot
    release: pinot
    app.kubernetes.io/version: "0.2.5"
    app.kubernetes.io/managed-by: Helm
    heritage: Helm
    component: controller
spec:
  type: LoadBalancer
  ports:
    - name: external-controller
      port: 9000
  selector:
    app: pinot
    release: pinot
    component: controller
---
# Source: pinot/templates/controller/service-headless.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

apiVersion: v1
kind: Service
metadata:
  name: pinot-controller-headless
  labels:
    helm.sh/chart: pinot-0.2.5
    app: pinot
    release: pinot
    app.kubernetes.io/version: "0.2.5"
    app.kubernetes.io/managed-by: Helm
    heritage: Helm
    component: controller
spec:
  clusterIP: None
  ports:
    # [pod_name].[service_name].[namespace].svc.cluster.local
    - name: controller
      port: 9000
  selector:
    app: pinot
    release: pinot
    component: controller
---
# Source: pinot/templates/controller/service.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

apiVersion: v1
kind: Service
metadata:
  name: pinot-controller
  annotations:
    {}
  labels:
    helm.sh/chart: pinot-0.2.5
    app: pinot
    release: pinot
    app.kubernetes.io/version: "0.2.5"
    app.kubernetes.io/managed-by: Helm
    heritage: Helm
    component: controller
spec:
  type: ClusterIP
  ports:
    # [pod_name].[service_name].[namespace].svc.cluster.local
    - name: controller
      port: 9000
  selector:
    app: pinot
    release: pinot
    component: controller
---
# Source: pinot/templates/minion/service-headless.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

# apiVersion: v1
# kind: Service
# metadata:
#   name: pinot-minion-headless
#   labels:
#     helm.sh/chart: pinot-0.2.5
#     app: pinot
#     release: pinot
#     app.kubernetes.io/version: "0.2.5"
#     app.kubernetes.io/managed-by: Helm
#     heritage: Helm
#     component: minion
# spec:
#   clusterIP: None
#   ports:
#     # [pod_name].[service_name].[namespace].svc.cluster.local
#     - name: minion
#       port: 9514
#   selector:
#     app: pinot
#     release: pinot
#     component: minion
# ---
# Source: pinot/templates/minion/service.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

# # apiVersion: v1
# # kind: Service
# # metadata:
# #   name: pinot-minion
# #   annotations:
# #     {}
# #   labels:
# #     helm.sh/chart: pinot-0.2.5
# #     app: pinot
# #     release: pinot
# #     app.kubernetes.io/version: "0.2.5"
# #     app.kubernetes.io/managed-by: Helm
# #     heritage: Helm
# #     component: minion
# # spec:
# #   type: ClusterIP
# #   ports:
# #     # [pod_name].[service_name].[namespace].svc.cluster.local
# #     - name: minion
# #       port: 9514
# #   selector:
# #     app: pinot
# #     release: pinot
# #     component: minion
# # ---
# Source: pinot/templates/server/service-headless.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

apiVersion: v1
kind: Service
metadata:
  name: pinot-server-headless
  labels:
    helm.sh/chart: pinot-0.2.5
    app: pinot
    release: pinot
    app.kubernetes.io/version: "0.2.5"
    app.kubernetes.io/managed-by: Helm
    heritage: Helm
    component: server
spec:
  clusterIP: None
  ports:
    # [pod_name].[service_name].[namespace].svc.cluster.local
    - name: netty
      port: 8098
      protocol: TCP
    - name: admin
      port: 80
      targetPort: 8097
      protocol: TCP
  selector:
    app: pinot
    release: pinot
    component: server
---
# Source: pinot/templates/server/service.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

apiVersion: v1
kind: Service
metadata:
  name: pinot-server
  annotations:
    {}
  labels:
    helm.sh/chart: pinot-0.2.5
    app: pinot
    release: pinot
    app.kubernetes.io/version: "0.2.5"
    app.kubernetes.io/managed-by: Helm
    heritage: Helm
    component: server
spec:
  type: ClusterIP
  ports:
    # [pod_name].[service_name].[namespace].svc.cluster.local
    - name: netty
      port: 8098
      protocol: TCP
    - name: admin
      port: 80
      targetPort: 8097
      protocol: TCP
  selector:
    app: pinot
    release: pinot
    component: server
---
# Source: pinot/charts/zookeeper/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: pinot-zookeeper
  namespace: default
  labels:
    app.kubernetes.io/name: zookeeper
    helm.sh/chart: zookeeper-7.0.0
    app.kubernetes.io/instance: pinot
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: zookeeper
    role: zookeeper
spec:
  serviceName: pinot-zookeeper-headless
  replicas: 1
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: zookeeper
      app.kubernetes.io/instance: pinot
      app.kubernetes.io/component: zookeeper
  template:
    metadata:
      name: pinot-zookeeper
      labels:
        app.kubernetes.io/name: zookeeper
        helm.sh/chart: zookeeper-7.0.0
        app.kubernetes.io/instance: pinot
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: zookeeper
    spec:
      
      serviceAccountName: default
      securityContext:
        fsGroup: 1001
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: zookeeper
                    app.kubernetes.io/instance: pinot
                    app.kubernetes.io/component: zookeeper
                namespaces:
                  - "default"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      containers:
        - name: zookeeper
          image: docker.io/bitnami/zookeeper:3.7.0-debian-10-r56
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsUser: 1001
          command:
            - bash
            - -ec
            - |
                # Execute entrypoint as usual after obtaining ZOO_SERVER_ID
                # check ZOO_SERVER_ID in persistent volume via myid
                # if not present, set based on POD hostname
                if [[ -f "/bitnami/zookeeper/data/myid" ]]; then
                  export ZOO_SERVER_ID="$(cat /bitnami/zookeeper/data/myid)"
                else
                  HOSTNAME=`hostname -s`
                  if [[ $HOSTNAME =~ (.*)-([0-9]+)$ ]]; then
                    ORD=${BASH_REMATCH[2]}
                    export ZOO_SERVER_ID=$((ORD + 1 ))
                  else
                    echo "Failed to get index from hostname $HOST"
                    exit 1
                  fi
                fi
                exec /entrypoint.sh /run.sh
          resources:
            requests:
              cpu: 250m
              memory: 256Mi
          env:
            - name: ZOO_DATA_LOG_DIR
              value: ""
            - name: ZOO_PORT_NUMBER
              value: "2181"
            - name: ZOO_TICK_TIME
              value: "2000"
            - name: ZOO_INIT_LIMIT
              value: "10"
            - name: ZOO_SYNC_LIMIT
              value: "5"
            - name: ZOO_MAX_CLIENT_CNXNS
              value: "60"
            - name: ZOO_4LW_COMMANDS_WHITELIST
              value: "srvr, mntr, ruok"
            - name: ZOO_LISTEN_ALLIPS_ENABLED
              value: "no"
            - name: ZOO_AUTOPURGE_INTERVAL
              value: "0"
            - name: ZOO_AUTOPURGE_RETAIN_COUNT
              value: "3"
            - name: ZOO_MAX_SESSION_TIMEOUT
              value: "40000"
            - name: ZOO_SERVERS
              value: pinot-zookeeper-0.pinot-zookeeper-headless.default.svc.cluster.local:2888:3888::1 
            - name: ZOO_ENABLE_AUTH
              value: "no"
            - name: ZOO_HEAP_SIZE
              value: "1024"
            - name: ZOO_LOG_LEVEL
              value: "ERROR"
            - name: ALLOW_ANONYMOUS_LOGIN
              value: "yes"
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
          ports:
            - name: client
              containerPort: 2181
            - name: follower
              containerPort: 2888
            - name: election
              containerPort: 3888
          livenessProbe:
            exec:
              command: ['/bin/bash', '-c', 'echo "ruok" | timeout 2 nc -w 2 localhost 2181 | grep imok']
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            exec:
              command: ['/bin/bash', '-c', 'echo "ruok" | timeout 2 nc -w 2 localhost 2181 | grep imok']
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          volumeMounts:
            - name: data
              mountPath: /bitnami/zookeeper
      volumes:
  volumeClaimTemplates:
    - metadata:
        name: data
        annotations:
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "8Gi"
---
# Source: pinot/templates/broker/statefulset.yml
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: pinot-broker
  labels:
    helm.sh/chart: pinot-0.2.5
    app: pinot
    release: pinot
    app.kubernetes.io/version: "0.2.5"
    app.kubernetes.io/managed-by: Helm
    heritage: Helm
    component: broker
spec:
  selector:
    matchLabels:
      app: pinot
      release: pinot
      component: broker
  serviceName: pinot-broker-headless
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        helm.sh/chart: pinot-0.2.5
        app: pinot
        release: pinot
        app.kubernetes.io/version: "0.2.5"
        app.kubernetes.io/managed-by: Helm
        heritage: Helm
        component: broker
      annotations:
        {}
    spec:
      terminationGracePeriodSeconds: 30
      serviceAccountName: pinot
      securityContext:
        {}
      nodeSelector:
        {}
      affinity:
        {}
      tolerations:
        []
      containers:
      - name: broker
        securityContext:
          {}
        image: "apachepinot/pinot:latest-jdk11"
        imagePullPolicy: IfNotPresent
        args: [
          "StartBroker",
          "-clusterName", "pinot",
          "-zkAddress", "pinot-zookeeper:2181",
          "-configFileName", "/var/pinot/broker/config/pinot-broker.conf"
        ]
        env:
          - name: JAVA_OPTS
            value: "-Xms256M -Xmx1G -XX:+UseG1GC -XX:MaxGCPauseMillis=200 -Xlog:gc*:file=/opt/pinot/gc-pinot-broker.log -Dlog4j2.configurationFile=/opt/pinot/conf/log4j2.xml -Dplugins.dir=/opt/pinot/plugins"
        envFrom:
          []
        ports:
          - containerPort: 8099
            protocol: TCP
            name: broker
        volumeMounts:
          - name: config
            mountPath: /var/pinot/broker/config
        livenessProbe:
          initialDelaySeconds: 60
          periodSeconds: 10
          httpGet:
            path: /health
            port: 8099
        readinessProbe:
          initialDelaySeconds: 60
          periodSeconds: 10
          httpGet:
            path: /health
            port: 8099
        resources:
            {}
      restartPolicy: Always
      volumes:
        - name: config
          configMap:
            name: pinot-broker-config
---
# Source: pinot/templates/controller/statefulset.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: pinot-controller
  labels:
    helm.sh/chart: pinot-0.2.5
    app: pinot
    release: pinot
    app.kubernetes.io/version: "0.2.5"
    app.kubernetes.io/managed-by: Helm
    heritage: Helm
    component: controller
spec:
  selector:
    matchLabels:
      app: pinot
      release: pinot
      component: controller
  serviceName: pinot-controller-headless
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        helm.sh/chart: pinot-0.2.5
        app: pinot
        release: pinot
        app.kubernetes.io/version: "0.2.5"
        app.kubernetes.io/managed-by: Helm
        heritage: Helm
        component: controller
      annotations:
        {}
    spec:
      terminationGracePeriodSeconds: 30
      serviceAccountName: pinot
      securityContext:
        {}
      nodeSelector:
        {}
      affinity:
        {}
      tolerations:
        []
      containers:
      - name: controller
        securityContext:
          {}
        image: "apachepinot/pinot:latest-jdk11"
        imagePullPolicy: IfNotPresent
        args: [ "StartController", "-configFileName", "/var/pinot/controller/config/pinot-controller.conf" ]
        env:
          - name: JAVA_OPTS
            value: "-Xms256M -Xmx1G -XX:+UseG1GC -XX:MaxGCPauseMillis=200 -Xlog:gc*:file=/opt/pinot/gc-pinot-controller.log -Dlog4j2.configurationFile=/opt/pinot/conf/log4j2.xml -Dplugins.dir=/opt/pinot/plugins"
        envFrom:
          []
        ports:
          - containerPort: 9000
            protocol: TCP
            name: controller
        volumeMounts:
          - name: config
            mountPath: /var/pinot/controller/config
          - name: data
            mountPath: "/var/pinot/controller/data"
        resources:
            {}
      restartPolicy: Always
      volumes:
      - name: config
        configMap:
          name: pinot-controller-config
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "1G"
---
# Source: pinot/templates/minion/statefulset.yml
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

# # apiVersion: apps/v1
# # kind: StatefulSet
# # metadata:
# #   name: pinot-minion
# #   labels:
# #     helm.sh/chart: pinot-0.2.5
# #     app: pinot
# #     release: pinot
# #     app.kubernetes.io/version: "0.2.5"
# #     app.kubernetes.io/managed-by: Helm
# #     heritage: Helm
# #     component: minion
# # spec:
# #   selector:
# #     matchLabels:
# #       app: pinot
# #       release: pinot
# #       component: minion
# #   serviceName: pinot-minion-headless
# #   replicas: 1
# #   updateStrategy:
# #     type: RollingUpdate
# #   podManagementPolicy: Parallel
# #   template:
# #     metadata:
# #       labels:
# #         helm.sh/chart: pinot-0.2.5
# #         app: pinot
# #         release: pinot
# #         app.kubernetes.io/version: "0.2.5"
# #         app.kubernetes.io/managed-by: Helm
# #         heritage: Helm
# #         component: minion
# #       annotations:
# #         {}
# #     spec:
# #       terminationGracePeriodSeconds: 30
# #       serviceAccountName: pinot
# #       securityContext:
# #         {}
# #       nodeSelector:
# #         {}
# #       affinity:
# #         {}
# #       tolerations:
# #         []
# #       containers:
# #       - name: minion
# #         securityContext:
# #           {}
# #         image: "apachepinot/pinot:latest-jdk11"
# #         imagePullPolicy: IfNotPresent
# #         args: [
# #           "StartMinion",
# #           "-clusterName", "pinot",
# #           "-zkAddress", "pinot-zookeeper:2181",
# #           "-configFileName", "/var/pinot/minion/config/pinot-minion.conf"
# #         ]
# #         env:
# #           - name: JAVA_OPTS
# #             value: "-Xms256M -Xmx1G -XX:+UseG1GC -XX:MaxGCPauseMillis=200 -Xlog:gc*:file=/opt/pinot/gc-pinot-minion.log -Dlog4j2.configurationFile=/opt/pinot/conf/log4j2.xml -Dplugins.dir=/opt/pinot/plugins"
# #         envFrom:
# #           []
# #         ports:
# #           - containerPort: 9514
# #             protocol: TCP
# #             name: minion
# #         volumeMounts:
# #           - name: config
# #             mountPath: /var/pinot/minion/config
# #           - name: data
# #             mountPath: "/var/pinot/minion/data"
# #         resources:
# #             {}
# #       restartPolicy: Always
# #       volumes:
# #         - name: config
# #           configMap:
# #             name: pinot-minion-config
# #   volumeClaimTemplates:
# #     - metadata:
# #         name: data
# #       spec:
# #         accessModes:
# #           - "ReadWriteOnce"
# #         resources:
# #           requests:
# #             storage: 4G
# # ---
# Source: pinot/templates/server/statefulset.yml
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: pinot-server
  labels:
    helm.sh/chart: pinot-0.2.5
    app: pinot
    release: pinot
    app.kubernetes.io/version: "0.2.5"
    app.kubernetes.io/managed-by: Helm
    heritage: Helm
    component: server
spec:
  selector:
    matchLabels:
      app: pinot
      release: pinot
      component: server
  serviceName: pinot-server-headless
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        helm.sh/chart: pinot-0.2.5
        app: pinot
        release: pinot
        app.kubernetes.io/version: "0.2.5"
        app.kubernetes.io/managed-by: Helm
        heritage: Helm
        component: server
      annotations:
        {}
    spec:
      terminationGracePeriodSeconds: 30
      serviceAccountName: pinot
      securityContext:
        {}
      nodeSelector:
        {}
      affinity:
        {}
      tolerations:
        []
      containers:
      - name: server
        securityContext:
          {}
        image: "apachepinot/pinot:latest-jdk11"
        imagePullPolicy: IfNotPresent
        args: [
          "StartServer",
          "-clusterName", "pinot",
          "-zkAddress", "pinot-zookeeper:2181",
          "-configFileName", "/var/pinot/server/config/pinot-server.conf"
        ]
        env:
          - name: JAVA_OPTS
            value: "-Xms512M -Xmx1G -XX:+UseG1GC -XX:MaxGCPauseMillis=200 -Xlog:gc*:file=/opt/pinot/gc-pinot-server.log -Dlog4j2.configurationFile=/opt/pinot/conf/log4j2.xml -Dplugins.dir=/opt/pinot/plugins"
        envFrom:
          []
        ports:
          - containerPort: 8098
            protocol: TCP
            name: netty
          - containerPort: 8097
            protocol: TCP
            name: admin
        volumeMounts:
          - name: config
            mountPath: /var/pinot/server/config
          - name: data
            mountPath: "/var/pinot/server/data"
        resources:
            {}
      restartPolicy: Always
      volumes:
        - name: config
          configMap:
            name: pinot-server-config
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: 4G
---
# Source: pinot/templates/broker/service-external.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
---
# Source: pinot/templates/controller/service-external.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
